-- 이름이 없는 동물의 아이디
SELECT animal_id
from animal_ins
where name is null
order by 1;

-- 나이 정보가 없는 회원 수 구하기
SELECT count(*) as 'USERS'
from user_info 
where age is null

-- 가격대 별 상품 개수 구하기
SELECT case when 0 < price and price < 10000 then 0
when 10000 <= price and price < 20000 then 10000
when 20000 <= price and price < 30000 then 20000
when 30000 <= price and price < 40000 then 30000
when 40000 <= price and price < 50000 then 40000
when 50000 <= price and price < 60000 then 50000
when 60000 <= price and price < 70000 then 60000
when 70000 <= price and price < 80000 then 70000
when 80000 <= price and price < 90000 then 80000
end as pricegroup, count(*)
from product 
group by pricegroup
order by pricegroup asc;

-- 재구매가 일어난 상품과 회원 리스트 구하기
SELECT USER_ID, PRODUCT_ID
from ONLINE_SALE
group by user_id, product_id
having count(*)> 1
order by USER_ID asc, PRODUCT_ID desc

-- 3월에 태어난 여성 회원 목록 출력하기
SELECT MEMBER_ID, MEMBER_NAME, GENDER, DATE_FORMAT(date_of_birth, "%Y-%m-%d") as'DATE_OF_BIRTH'
from MEMBER_PROFILE
where substr(date_of_birth,6,2) like '03' and GENDER LIKE 'W' AND tlno is not null
order by MEMBER_ID asc;

-- 진료과별 총 예약 횟수 출력하기
SELECT MCDP_CD AS '진료과코드' , COUNT(*) AS '5월예약건수'
FROM APPOINTMENT
WHERE SUBSTR(APNT_YMD, 1, 7) LIKE '2022-05' 
GROUP BY MCDP_CD
ORDER BY  COUNT(*) ASC,MCDP_CD  ASC;

-- 상품 별 오프라인 매출 구하기
SELECT p.product_code, sum(p.price * o.SALES_AMOUNT) sales
from product p, offline_sale o
group by p.PRODUCT_CODE
order by sales  desc,  p.product_code asc

-- 상품 별 오프라인 매출 구하기
SELECT p.product_code, sum(p.price * o.SALES_AMOUNT) sales
from product p
left join offline_sale o on p.product_id = o.product_id
group by p.PRODUCT_CODE
order by sales  desc,  p.product_code asc

-- 카테고리 별 상품 개수 구하기
SELECT substr(product_code,1,2) category, count(*) products
from product 
group by category
order by category asc;

-- 가격이 제일 비싼 식품의 정보 출력하기
SELECT *
from FOOD_PRODUCT
where price = (select max(price) from FOOD_PRODUCT)

-- null 처리하기
SELECT ANIMAL_TYPE, COALESCE(NAME, 'No name') as NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

-- 이름에 el이 들어가는 동물 찾기
SELECT animal_id, name
from ANIMAL_INS
where name like '%el%' and animal_type like 'Dog'
order  by name asc;


-- 중성화 여부 파악하기
SELECT animal_id, name, 
case
 when SEX_UPON_INTAKE like 'Neutered%' or SEX_UPON_INTAKE like 'Spayed%' then 'O'
 else "X"
 end
as '중성화'
from ANIMAL_INS 
order by ANIMAL_ID, name, SEX_UPON_INTAKE
